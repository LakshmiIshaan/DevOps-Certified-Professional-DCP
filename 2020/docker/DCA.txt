DCA - Docker -> Swarm
CKA - Kubernetes -
=======================
What is Docker?
	Container Mgmt tool.
	Platform for container
	RElease
		CE - YES
		EE
	Written in Go
	By Soloman  Hykes...

What is tool?
	To save time
	To save cost
	To improve eff*

What is mgmt?
	
What is Container?
	isolated lightweight APP run time env.
	USer SPACe
			1 MOUNT
			1 Net
			1 process map

PHYSCIAL 			Virtulization		Container
-------------------------
1 APP - 100 APP			->
1 - P Server - 100 P SERVER	->	100 VMS		1000 APp
Waste - 85%			->	15%
CPU+RAM+STO+LICE

Most important qUESTIONS?
==============================
How to run App?
	Cheaper
	Faster
	Better

What are the components needed for running app?
==================================================
FILESYSTEM => NAMESPACE => KERNAL => OS => 1
PROCESS MAP => NAMESPACE => KERNAL => OS => 1
NETWORK => NAMESPACE => KERNAL => OS	=> 1
USER SPACE => NAMESPACE => KERNAL => OS	=> N number

PC - Personal Computing --> Humen being
============================

======================
CPU -> CGROUPS => KERNAL => OS
RAM -> CGROUPS => KERNAL => OS
======================
PERMISSION -> CAPABILLITY => KERNAL => OS






Why Docker?
==========================
- Utlizing more efficiently CPU - RAM - HD and avoid wastage of OS of virtualization.
- Speed of Deployment
- Docker is platform - Running a app in container across all machine is same and faster


How Docker Works!!! AKA Docker Architecture
=================================================

Human -> Docker Client --REST API --> Docker Deamon --> ContainerD --> Kernal 
	-----------------------------------------------								

			DOCKER ENGINE					Namespaces
									CGROUP
									Capability

How to install Docker?
=============================
13.233.224.94

DOCKER NEEDS ROOT...
or
a USER HAS TO BE A PART OF GROUP CALLED "docker"

https://www.devopsschool.com/tutorial/docker/install-config/index.html

https://www.devopsschool.com/tutorial/docker/install-config/docker-install-commuityedition-centos-rhel.html
  1  clear
    2  ls
    3  sudo yum install -y yum-utils device-mapper-persistent-data lvm2
    4  clear
    5  sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
    6  sudo yum install â€“y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    7  sudo yum-config-manager --enable rhui-REGION-rhel-server-extras
    8  sudo yum install -y docker-ce
    9  sudo yum install docker-ce
   10  sudo systemctl enable docker
   11  sudo systemctl start docker
   12  clear
   13  docker
   14  docker version
   15  history
docker info


Basic Workflow in Docker?
===================================================
Human --> Client --> Server --> Check IMAGE of App in Localrepo --> If not found -> Download from Remote repo 

to LR
---------------------------------------------------------------------
			To Create App container.

Basic Components of Docker
=================================
Docker Engine - A Platform
Docker Image
		App runtime env fully independent.
		Whatever you have in image - you see inside a container.
		= BOOTfS(NO) + ROOTfs + APPfs 
		
Docker Registry and Repos
		Registry = A place where you have so many Repos
		Repos = You have one DOCKeR image.

		PUBLIC
			hub.docker.com
			Google Registry
			ECR
		PVT
			nexus
			Artifactory
			ECR
	
Docker Container
		The moment you run Image - you get one container.
		From one image - you can many container.
		Inside a container you have - what you have in image
		Usually - you run some app in container.

LifeCycle of Container
LifeCycle of vms
===================================================
pull -> create -> start -> stop -> restart -> pause -> unpause -> kill -> remove
https://www.devopsschool.com/tutorial/docker/commands/index.html
=========================
pull -> create -> start	+ BECOME == RUN

12  clear
   13  docker
   14  docker version
   15  history
   16  clear
   17  docker info
   18  docker info
   19  clear
   20  docker ps
   21  docker ps
   22  docker ps -a
   23  docker images
   24  docker info
   25  clear
   26  docker  images
   27  docker pull jenkins
   28  clear
   29  docker images
   30  docker ps -a
   31  docker craete jenkins
   32  docker create jenkins
   33  docker ps -a
   34  docker start jenkins
   35  docker start 992f2a6db929
   36  docker ps -a
   37  docker stop 992f2a6db929
   38  docker ps -a
   39  docker restart 992f2a6db929
   40  docker ps -a
   41  clear
   42  docker ps
   43  docker stats
   44  docker ps
   45  docker pause 992f2a6db929
   46  docker ps -a
   47  docker stats
   48  clear
   49  docker unpause 992f2a6db929
   50  docker stats
   51  clear
   52  ls
   53  docker ps -a
   54  docker kill 992f2a6db929
   55  docker ps -a
   56  docker ps
   57  docker ps -a
   58  docker rm 992f2a6db929
   59  docker ps -a
   60  cler
   61  clear
   62  clear
   63  who
   64  id
   65  w
   66  ps
   67  clear
   68  docker run jenkins
   69  history
 1  clear
    2  docker ps
    3  docker run -d jenkins
    4  docker ps
    5  docker run -d jenkins
    6  docker ps
    7  clear
    8  docker ps
    9  history
=================================================
35.154.250.35
=========================================
https://www.devopsschool.com/tutorial/docker/commands/index.html


What is an Image?
-----------------------------
FILESYSTEM
	BOOTFS - KERNAL
	ROOTFS - OS (APP ON TOP OF KERNAL)
	APPFS ->	
=============================================
Image - ROOTFS + APPFS
============================================
Image is combination of Layers and Each layer is FS.
Bottom layer is ROOTFS. On Top of APPFS
===================================================
Each layer of image is RO.
Each Layer has their parent layers.
=================================================
What happens when you create a container from ONE image?
	One Merge layer gets created - RW
		merged - This is result of all layer merging "Diff" dir. 
		Diff -  Any file you write - its gets created in work diff dir but same time, it gets merge to 

merged dir.   

===================================
Who is DOING Dynamic merging???
	UNION MOUNTS.

GIT - SHA1
DOCKER - SHA256
===================================================================
While Merging - If conflict occuer - TOP/LAST layer would win.

When you stop a container - Only merge dir of container layer get delete and unmounted.


How to create image?
=================================
2 - Method  
1. Using Existing Container
2. using Dockerfile.
===============================================
1. Using Existing Container
=======================================
ubuntu -> git


284  clear
  285  docker ps
  286  docker ps
  287  docker ps
  288  docker exec 68149d7cf1bd more
  289  docker exec 68149d7cf1bd more /var/jenkins_home/secrets/initialAdminPassword
  290  docker ps
  291  docker attach ef1e7ff73c6c
  292  clear
  293  docker stats
  294  docker stats ef1e7ff73c6c
  295  clear
  296  docker top
  297  docker ps
  298  docker top ef1e7ff73c6c
  299  ps -eaf | grep docker
  300  clear
  301  docker events
  302  clear
  303  docker ps
  304  docker stop ef1e7ff73c6c 68149d7cf1bd
  305  docker stop $(docker ps -a -q)
  306  docker rm $(docker ps -a -q)
  307  cleatr
  308  clar
  309  clear
  310  docker ps -a
  311  docker images
  312  docker rmi jenkins
  313  clear
  314  ls
  315  cd /var/lib/docker
  316  ls
  317  docker info
  318  clear
  319  ls
  320  cd overlay2
  321  ls
  322  docker rim ubuntu
  323  docker rmi ubuntu
  324  clear
  325  ls
  326  docker pull ubuntu
  327  ls
  328  docker inspect ubuntu
  329  clear
  330  ls
  331  ls
  332  clear
  333  tree
  334  yum install tree -y
  335  clear
  336  tree
  337  clear
  338  ls
  339  cd 192040a90928178cbab8c423bb87e946e3db5f5a4abeebc75a27effda76c1416
  340  ls
  341  cd work
  342  ls
  343  cd ..
  344  ls
  345  cd diff
  346  ls
  347  clear
  348  ls
  349  du -sh --max-depth=1
  350  du -h --max-depth=1
  351  cd ..
  352  ls
  353  ccd ..
  354  cd ..
  355  clear
  356  du -h --max-depth=1
  357  cd ./97c8c57c5c60e1af1a5b03e0b9a3556fefaabcb8477a4f73b685f82581725467
  358  ls
  359  cd diff/
  360  clear
  361  ls
  362  clear
  363  docker images
  364  clear
  365  cd ..
  366  ls
  367  cd ..
  368  ls
  369  docker ps
  370  df -kh
  371  docker stop ac88ad7edc13
  372  clear
  373  ls
  374  cd 0d39abdd9462785708ce5a6232373436647142d4089cc329474eab2fa016a9c5
  375  ls
  376  df -kh
  377  clear
  378  ls
  379  cd diff
  380  ls
  381  cd opt/
  382  ls
  383  cd ..
  384  ls
  385  cd ..
  386  ls
  387  cd ..
  388  ls
  389  clear
  390  clear
  391  ls
  392  docker ps -a
  393  docker rm ac88ad7edc13
  394  ls
  395  clear
  396  docker images
  397  docker history ubuntu
  398  clear
  399  ls
  400  docker run -itd ubuntu
  401  docker ps
  402  docker attach 5e7d4dcc291a
  403  clear
  404  ls
  405  git
  406  docker ps
  407  docker exec 5e7d4dcc291a git
  408  clear
  409  ls
  410  docker ps -a
  411  docker commit -m"ub-git" -a"Rajesh kumar" 5e7d4dcc291a ub-git
  412  ls
  413  clear
  414  ls
  415  docker images
  416  docker history ub-git
  417  clear
  418  ls -lrt
  419  cd 24a67f8c545d3a562d23d1cbc4eb84f194ddbdf5f3176c4b054d40ac92166c96
  420  cler
  421  ls
  422  clear
  423  ls
  424  cd diff
  425  ls
  426  history

 276  ls
  277  docker ps
  278  docker logs 68149d7cf1bd
  279  watch docker logs 68149d7cf1bd
  280  watch docker logs 68149d7cf1bd
  281  ls
  282  docke rps
  283  docker ps
  284  docker logs ef1e7ff73c6c
  285  watch docker logs ef1e7ff73c6c
  286  ckear
  287  clear
  288  docker run -d ubuntu
  289  68149d7cf1bd
  290  clear
  291  docker ps
  292  docker ps -a
  293  cd /var/lib/docker
  294  ls
  295  cd overlay2/
  296  cleatr
  297  ls
  298  clear
  299  ls
  300  docker run -itd ubuntu
  301  docker ps
  302  ls
  303  du -sh 0d39abdd9462785708ce5a6232373436647142d4089cc329474eab2fa016a9c5
  304  clear
  305  ls
  306  du -sh 0d39abdd9462785708ce5a6232373436647142d4089cc329474eab2fa016a9c5-init
  307  clear
  308  ls
  309  cd 0d39abdd9462785708ce5a6232373436647142d4089cc329474eab2fa016a9c5
  310  ls
  311  clear
  312  ls
  313  df -kh
  314  clear
  315  ls
  316  cd ..
  317  ls
  318  docker ps
  319  docker exec ac88ad7edc13 touch /opt/devopsschoo.txt
  320  find . -name devopsschoo.txt
  321  clear
  322  ls
  323  cd 0d39abdd9462785708ce5a6232373436647142d4089cc329474eab2fa016a9c5
  324  ls
  325  cd diff
  326  ls
  327  cd opt
  328  ls
  329  ls
  330  clear


What is UNION MOUNTS.?
==========================

Q 1 - 
Why you run 100 App in 100 Server?
Why not 1?

Q 2- 
What is NAMESPACE?

Q 3 - 
What is KERNAL 

Q 4- -> 
What is CGROUPS

Q 5- -> 
What is cAPABILITY IN kERNAL

What is SHA256?
